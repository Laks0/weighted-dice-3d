[gd_resource type="ShaderMaterial" load_steps=6 format=3 uid="uid://bankwl5wtdnlt"]

[ext_resource type="Texture2D" uid="uid://8ipwu3qnw25n" path="res://Scenes/Arena/Alfombra_Alfombra_Color.png" id="1_8kfox"]
[ext_resource type="Texture2D" uid="uid://d07sswfu3j4k" path="res://Scenes/Arena/Alfombra_Alfombra_Textura_3.png" id="2_s0x6c"]

[sub_resource type="Shader" id="Shader_gqcut"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_normal : hint_roughness_normal,filter_linear_mipmap,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform sampler2D noise;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	VERTEX.y = texture(noise, VERTEX.xz + vec2(TIME, TIME)*.1).x*2.0;
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_p4a2l"]
frequency = 0.001

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_0v4pl"]
seamless = true
noise = SubResource("FastNoiseLite_p4a2l")

[resource]
resource_name = "Material.006"
render_priority = 0
shader = SubResource("Shader_gqcut")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.15
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0590909
shader_parameter/normal_scale = 1.01
shader_parameter/uv1_scale = Vector3(0.755, 1, 1)
shader_parameter/uv1_offset = Vector3(0.165, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("1_8kfox")
shader_parameter/texture_normal = ExtResource("2_s0x6c")
shader_parameter/noise = SubResource("NoiseTexture2D_0v4pl")
